name: mlops

x-mlops-common:
  &mlops-common
  environment:
    &mlops-common-env
    # JuiceFS S3 gateway
    S3_USER: ${S3_USER:-admin}
    S3_PASS: ${S3_PASS:-admin123}
    # Bucket name for storing MLFlow artifacts
    MODEL_BUCKET: ${MODEL_BUCKET:-mlflow}

services:
  juicefs:
    <<: *mlops-common
    image: juicedata/mount:latest
    restart: unless-stopped
    volumes:
      # SQLite database for JuiceFS
      - ./home/juicefs:/home/juicefs
      # JuiceFS file system location
      - ./var/jfs:/var/jfs
    ports:
      # JuiceFS S3 gateway port
      - 9000:9000
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        if [[ ! -d /var/jfs/myjfs ]]; then
          echo "Creating new JuiceFS file system..."
          juicefs format sqlite3:///home/juicefs/myjfs.db myjfs
        fi

        export MINIO_ROOT_USER="$$S3_USER"
        export MINIO_ROOT_PASSWORD="$$S3_PASS"

        echo "Starting JuiceFS S3 gateway (based on MinIO)..."
        juicefs gateway sqlite3:///home/juicefs/myjfs.db 0.0.0.0:9000 --multi-buckets
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:9000/minio/health/live"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5

  awscli:
    <<: *mlops-common
    image: amazon/aws-cli:latest
    depends_on:
      juicefs:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        export AWS_ACCESS_KEY_ID="$$S3_USER"
        export AWS_SECRET_ACCESS_KEY="$$S3_PASS"
        export AWS_ENDPOINT_URL=http://juicefs:9000

        if [[ ! -z $$(aws s3api head-bucket --bucket "$$MODEL_BUCKET" 2>&1) ]]; then
          echo "Creating new bucket for storing MLFlow artifacts..."
          aws s3 mb "s3://$$MODEL_BUCKET"
        fi

  mlflow:
    <<: *mlops-common
    image: ghcr.io/mlflow/mlflow:latest
    restart: unless-stopped
    volumes:
      # SQLite database for MLFlow
      - ./home/mlflow:/home/mlflow
    ports:
      # MLFlow tracking server port
      - 5000:5000
    depends_on:
      juicefs:
        condition: service_healthy
      awscli:
        condition: service_completed_successfully
    entrypoint: ["/bin/bash", "-c"]
    command:
        - |
          export AWS_ACCESS_KEY_ID="$$S3_USER"
          export AWS_SECRET_ACCESS_KEY="$$S3_PASS"
          export AWS_ENDPOINT_URL=http://juicefs:9000

          echo "Installing Python boto3 dependency..."
          echo "boto3 version between MLFlow server and client must be the same!"
          pip install boto3==1.38.38

          echo "Starting MLFlow UI server..."
          mlflow ui -h 0.0.0.0 -p 5000 \
            --backend-store-uri "sqlite:///home/mlflow/mlruns.db" \
            --default-artifact-root "mlflow-artifacts:/" \
            --artifacts-destination "s3://$$MODEL_BUCKET"
            --serve-artifacts
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:5000/health"]
      start_period: 30s
      interval: 30s
      timeout: 5s
      retries: 5